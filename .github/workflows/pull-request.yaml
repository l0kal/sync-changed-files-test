name: Deploy
on:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Get all changed markdown files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
            files: |
                customer-config/**/**.json

      # - name: List all changed files markdown files
      #   if: steps.changed-schema-files.outputs.any_changed == 'true'
      #   env:
      #       ALL_CHANGED_FILES: ${{ steps.changed-schema-files.outputs.all_changed_files }}
      #       MODIFIED_FILES: ${{ steps.changed-schema-files.outputs.modified_files }}
      #       NEW_FILES: ${{ steps.changed-schema-files.outputs.added_files }}
      #   run: |
      #       for file in ${ALL_CHANGED_FILES}; do
      #         echo "$file was changed"
      #       done
      #       echo "Modified files: $MODIFIED_FILES"
      #       echo "New files: $NEW_FILES"
      #       echo ${MODIFIED_FILES} | paste -s -d':'
        
      - name: Set modified files in one line
        shell: bash
        run: |
          echo "MODIFIED_FILES=$(echo ${{ steps.changed-files.outputs.modified_files }} | tr -s ' ' ';')" >> $GITHUB_ENV
          echo "ADDED_FILES=$(echo ${{ steps.changed-files.outputs.added_files }} | tr -s ' ' ';')" >> $GITHUB_ENV

      - name: Prepare action
        run: npm ci --prefix .github/actions/sync-action

      - name: Validate and sync schema
        uses: ./.github/actions/sync-action
        with:
          schema-files: $MODIFIED_FILES
          dry-run: "false"
